priority -50
# ---------------------- html -------------------------
extends html


# ---------------------- requirejs define -------------------------
snippet define-notify
'angular-ui-notification',
endsnippet
snippet define-datetime-input
'styles/i18n//bootstrap-datetimepicker.zh-CN',
'angular-bootstrap-datetimepicker',
'angular-bootstrap-datetimepicker-templates',
'angular-date-time-input',
endsnippet
snippet define-datetime-duration
'duration-picker',
endsnippet
snippet define-switch
'angular-ui-switch',
endsnippet
snippet define-angular-ui-bootstrap
'angular-ui-bootstrap',
endsnippet
snippet define-ui-select
'ui-select',
endsnippet
snippet define-ng-table-ext
'ng-table-ext.direcitve',
endsnippet

snippet require-ng-controller
define([
	'app',
	'app-filters',
	'angular-ui-notification',
], function(app) {
	app.service('$1DS', function($notify) {
		let ajax = {
		};

		this.ajax = ajax;
	});
	app.controller('${1}Controller', function($scope, $notify, $1DS) {
		let data = {
			stateInit() {
				$scope.state = {
					${2}
				};
			},
			async async${3}() {
				${0}

				$scope.$apply();
			},
			asyncInit() {
				this.async$3();
			},
			init() {
				this.stateInit();
				this.asyncInit();
			}
		};
		let event = {
			init() {
			}
		};

		data.init();
		event.init();
	});
});
endsnippet
snippet require-ng-fetch
define(['angular', 'app', 'apiConstant', 'ajax'], function(angular, app, api) {

	app.factory('${1}', function(ajax) {
		let service = {};

		service.${2} = (${3:data}) => {
			let config = api.${4};
			config.${5:params:data} = data;
			return ajax.request(config);
		};

		return service;
	});

});
endsnippet



# ---------------------- fetch -------------------------
snippet ng-fetch-service
${1:service}.${2} = (${3:data}) => {
	let config = api.${4};
	config.${5:params:data} = data;
	return ajax.request(config);
};
endsnippet
snippet ng-fetch-fn
async ${1}() {
	try {
		await ${2};
	} catch(e) {
		$notify.error(e.message || (e.error && e.error.message) || e);
	}
},
endsnippet



# ----------------------angular-------------------------
snippet ng-filter
app.filter('${1}', function() {
	return function(data) {
		switch (data) {
			case ${2}: {
				return ${3};
			}
			default: {
				return ${0};
			}
		}
	};
});
endsnippet
snippet ng-service
app.service('${1}', function() {
	this.${2} = ${0};
});
endsnippet
snippet ng-service-ds
app.service('${1}DS', function($notify) {
	let ajax = {
	};

	this.ajax = ajax;
});
endsnippet
snippet ng-directive
// ${1}
new function() {
	let config = {
		templateUrl: 'scripts/directive/${2}${1/(\w+)(\s)?/(?2:\L$1\E-:\L$1\E)/g}/${1/(\w+)(\s)?/(?2:\L$1\E-:\L$1\E)/g}.html'
	}

	app.directive('${1/(\s)?(\w+)/(?1:\u$2:\L$2\E)/g}', function() {
		return {
			restrict: 'E',${3:
			// ng-transclude
			transclude: true,}
			scope: {
				${4:state: '=',}${5:
				id: '@',}
			},
			controller: function($scope) {
				let data = {
					stateInit() {
						$scope.state = {
							${6}
						};
					},
					async async${7}() {
						${0}

						$scope.$apply();
					},
					asyncInit() {
						this.async$7();
					},
					init() {
						this.stateInit();
						this.asyncInit();
					}
				};
				let event = {
					init() {
					}
				};

				data.init();
				event.init();
			},
			templateUrl: config.templateUrl
		};
	});
}
endsnippet
snippet ng-controller
app.controller('${1}Controller', function($scope) {
	let data = {
		stateInit() {
			$scope.state = {
				${2}
			};
		},
		async async${3}() {
			${0}

			//$scope.$apply();
		},
		asyncInit() {
			this.async$3();
		},
		init() {
			this.stateInit();
			this.asyncInit();
		}
	};
	let event = {
		init() {
		}
	};

	data.init();
	event.init();
});
endsnippet



# ---------------------- ng-notify -------------------------
snippet ng-notify-error
$notify.error(${0});
endsnippet
snippet ng-notify-error-msg
$notify.error(e.message || (e.error && e.error.message) || e);
endsnippet
snippet ng-notify-success
$notify.success(${0});
endsnippet



# ---------------------- ng-modal -------------------------
snippet ng-modal "$uibModal"
let model = $uibModal.open({
	animation: true,
	templateUrl: '${1:modal.html}',
	controller: function($scope) {
		$scope.header = ${2:''};
		$scope.onClickOk = () => {
			$uibModalInstance.close('ok');
		};
		$scope.onClickCancel = () => {
			$uibModalInstance.dismiss('cancel');
		};
	},
	resolve: {
		// 数据需要以函数形式传递，不然会报错
		${3:data: () => data}
	}
})
	.result
	.then(${4});
endsnippet



# ---------------------- ng-table -------------------------
snippet ng-table-ext-srv "服务端分页"
$scope.table = {
	${1}: {
		setting: {
			table: {
				${2:searchable: false},
				${3:columnable: false},
				${4:count: 10},
				${5:counts: [10, 20, 50, 100]},
				cols: [{
					${6}
				}],
				getData: function(params) {
					let promise = ${7}({page: params.page(), count: params.count()}).then(users => {
						params.total(users.total);
						return users.items;
					}).catch(e => {
						console.log(e);
					});
					return promise;
				}
			},
		},
	},
};
endsnippet
snippet ng-table-ext "客户端分页"
$scope.table = {
	${1}: {
		setting: {
			table: {
				${2:searchable: false},
				${3:columnable: false},
				${4:count: 10},
				${5:counts: [10, 20, 50, 100]},
				cols: [{
					${6}
				}],
			},
		},
		data: {
			table: []
		}
	},
};
endsnippet


# ---------------------- tab -------------------------
snippet ng-tab "js ui-bootstrap"

endsnippet


# ---------------------- debug -------------------------
snippet debug-setInterval-console
setInterval(() => {
	console.log(${0});
}, 2000);
endsnippet



