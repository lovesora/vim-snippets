priority -50

# ---------------------- angular2 class -------------------------
snippet ng2-@module "angular2 module"
import {
	NgModule
} from '@angular/core';

@NgModule({
	imports: [
	],
	declarations: [
	],
	exports: [
	],
	entryComponents: [
	],
})
export class ${1}Module { }
endsnippet
snippet ng2-@module-common "angular2 common module"
import {
	NgModule
} from '@angular/core';
import {
	MaterialModule
} from '@petkit/material';
import {
	RepositoryModule
} from '@petkit/flux';
import {
	${1/(\w+)\s?/\u$1/g}RoutingModule,
} from './${1/(\w+)(\s)?/(?2:\L$1\E-:\L$1\E)/g}-routing.module';
import {
	${1/(\w+)\s?/\u$1/g}Component
} from './${1/(\w+)(\s)?/(?2:\L$1\E-:\L$1\E)/g}.component';


// ${1:componentName}
@NgModule({
	imports: [
		${1/(\w+)\s?/\u$1/g}RoutingModule,
		MaterialModule,
		RepositoryModule,
	],
	declarations: [
		${1/(\w+)\s?/\u$1/g}Component,
		$0
	],
})
export class ${1/(\w+)\s?/\u$1/g}Module { }
endsnippet

snippet ng2-@module-route "angular2 module routing"
import {
	NgModule
} from '@angular/core';
import {
	Routes,
	RouterModule
} from '@angular/router';

const routes: Routes = [{
	path: '${1}',
	component: ${2}${0},${3:
	children: [{
		path: '${4}',
		loadChildren: '${5:xxx.module#XxxModule}',
	}],}
}];

@NgModule({
	imports: [
		RouterModule.forChild(routes)
	],
	exports: [RouterModule]
})
export class ${6}RoutingModule { }
endsnippet
snippet ng2-@module-route-common "angular2 common module routing"
import {
	NgModule
} from '@angular/core';
import {
	Routes,
	RouterModule
} from '@angular/router';
import {
	CreateComponent
} from './create/create.component';
import {
	ListComponent
} from './list/list.component';
import {
	${1/(\w+)\s?/\u$1/g}Component
} from './${1/(\w+)(\s)?/(?2:\L$1\E-:\L$1\E)/g}.component';

const routes: Routes = [{
	path: '',
	component: ${1/(\w+)\s?/\u$1/g}Component,
	children: [{
		path: '',
		redirectTo: 'list',
	}, {
		path: 'list',
		component: ListComponent,
	}, {
		path: 'create',
		component: CreateComponent,
	}, {
		path: 'update/:id',
		component: CreateComponent,
	}]
}];

// ${1:componentName}
@NgModule({
	imports: [
		RouterModule.forChild(routes)
	],
	exports: [RouterModule]
})
export class ${1/(\w+)\s?/\u$1/g}RoutingModule { }
endsnippet

snippet ng2-@component-simple "simple angular2 @Component"
import {
	Component,
	OnInit,
	OnDestroy,
} from '@angular/core';

// ${1:componentName}
@Component({
	selector: 'app${1/(\w+)\s?/-\L$1\E/g}',
	templateUrl: './${1/(\w+)(\s)?/(?2:\L$1\E-:\L$1\E)/g}.component.html',
})
export class ${1/(\w+)\s?/\u$1/g}Component implements OnInit, OnDestroy {
	constructor(${0}) {
	}
	ngOnInit() {
	}
	ngOnDestroy() {
	}
}
endsnippet

snippet ng2-@component "angular2 @Component"
import {
	Component,
	OnInit,
	OnDestroy,
	ViewEncapsulation
} from '@angular/core';

// ${1:componentName}
@Component({
	selector: 'app${1/(\w+)\s?/-\L$1\E/g}',
	templateUrl: './${1/(\w+)(\s)?/(?2:\L$1\E-:\L$1\E)/g}.component.html',
	styleUrls: [ './${1/(\w+)(\s)?/(?2:\L$1\E-:\L$1\E)/g}.component.scss'],${2:
	encapsulation: ViewEncapsulation.None,}${3:
	encapsulation: ViewEncapsulation.Emulated,}
})
export class ${1/(\w+)\s?/\u$1/g}Component implements OnInit, OnDestroy {
	constructor(${0}) {
	}
	ngOnInit() {
	}
	ngOnDestroy() {
	}
}
endsnippet

snippet ng2-@pipe "angular2 pipe"
import {
	Pipe,
	PipeTransform,
} from '@angular/core';

@Pipe({
	name: '${1:pipeName}',
})
export class ${1/(\w+)\s?/\u$1/g}Pipe implements PipeTransform {
	transform(value): string {
		let result;

		switch (value) {
			case ${2}: {
				result = ${3};
				break;
			}
			default:
				result = '';
		}

		return result;
	}
}
endsnippet

snippet ng2-@component-common-rx "angular2 common component rx"
import {
	Component,
	OnInit,
	OnDestroy,
} from '@angular/core';
import {
	Subscription,
} from 'rxjs/Rx';
import {
	${2}Service,
	$2Interfaces,
} from '@petkit/flux';
import {
	NCommon,
} from '../../../common/interface/common.interface';


// ${1:componentName}
@Component({
	selector: 'common-${1/(\w+)(\s)?/(?2:\L$1\E-:\L$1\E)/g}',
	templateUrl: './${1/(\w+)(\s)?/(?2:\L$1\E-:\L$1\E)/g}.component.html',
})
export class ${1/(\w+)\s?/\u$1/g}Component implements OnInit, OnDestroy, NCommon.CompRx {
	subs: Subscription[] = [];

	constructor(
		private ${2/(\w+)/\l$1/g}Service: $2Service,
	) {}

	ngOnInit() {
		this.initObs();
	}

	ngOnDestroy() {
		this.subs.map(sub => sub.unsubscribe());
	}

	initObs() {
		this.subs.push(this.${2/(\w+)/\l$1/g}Service.${3}.subscribe(() => {
		}));
	}
}
endsnippet

snippet ng2-@component-common "angular2 common component"
import {
	Component,
	OnInit,
	OnDestroy,
	ViewEncapsulation,
} from '@angular/core';
import {

} from '@petkit/flux';
import {
	Store
} from '@ngrx/store';
import {
	N${1/(\w+)\s?/\u$1/g}
} from './${1/(\w+)(\s)?/(?2:\L$1\E-:\L$1\E)/g}.interface';


// ${1:componentName}
@Component({
	selector: 'common-${1/(\w+)(\s)?/(?2:\L$1\E-:\L$1\E)/g}',
	templateUrl: './${1/(\w+)(\s)?/(?2:\L$1\E-:\L$1\E)/g}.component.html',
	styleUrls: [ './${1/(\w+)(\s)?/(?2:\L$1\E-:\L$1\E)/g}.component.scss'],
	encapsulation: ViewEncapsulation.Emulated,
})
export class ${1/(\w+)\s?/\u$1/g}Component implements OnInit, OnDestroy, ${2:Common.CompRx} {
	state: N${1/(\w+)\s?/\u$1/g}.IState;
	rx: N${1/(\w+)\s?/\u$1/g}.IRx;

	constructor(
		public store: Store<>,
	) {
		this.initRx();
		this.initState();
	}

	initState() {
		this.state = {
			${3}
		};

		${4:this.rx.dispatchGetList();
		this.rx.getList().subscribe(cages => {
			this.state.cages = cages;
		});}
	}

	initRx() {
		this.rx = {
			${5:dispatchGetList: () => {
				this.chainCageStore.dispatch(new ChainCageActions.ChainCageListAction());
			},
			getList: () => {
				return this.chainCageStore.select(CageStore.selectChainCageList);
			}}
		};
	}

	ngOnInit() {
	}

	ngOnDestroy() {
		this.rx.destroy.map(v => v.unsubscribe());
	}
}
endsnippet

snippet ng2-@directive "angular2 directive"
import {
	Directive,
	Input,
	Output,
	OnInit,
	OnChanges,
	SimpleChanges,
	ElementRef,
} from '@angular/core';

@Directive({
	selector: '[${1/(\w+)/\l$1/g}]'
})
export class ${1}Directive implements OnInit, OnChanges {
	_container: HTMLDivElement;

	constructor(
		private el: ElementRef,
	) {
	}

	ngOnInit() {
		this.el.nativeElement.appendChild(this.createModalCheck());
	}

	ngOnChanges(changes: SimpleChanges) {
		${4:this.checked = changes.checked.currentValue;}

		this.render();
	}

	createModalCheck() {
		const container = window.document.createElement('div');
		this._container = container;

		this.render();
		return container;
	}

	render() {
		${3:if (this._container) {
			this._container.style.opacity = this.checked ? '1' : '0';
		}}
	}
}
endsnippet

snippet ng2-@component-interface "angular2 component interface"
import {
	Observable
} from 'rxjs/Rx';

export namespace ${1}Namespace {
	export interface IState {
		${2:cages: IChainCage[];}
	}

	export interface IRx {
		${3:dispatchGetList: () => void;}
		${4:getList: () => Observable<IChainCage[]>;}
	}
}
endsnippet

snippet ng2-@service "angular2 service"
import {
	Injectable
} from '@angular/core';

@Injectable()
export class ${1}Service {
	constructor(
	) { }
	${0}
}
endsnippet


# ---------------------- angular2 routing -------------------------
snippet ng2-route-loadModule "module route"
{ path: '${1}', loadChildren: '${0}' },
endsnippet


# ---------------------- angular2 material design -------------------------
snippet ng2-mat-form-import "import mtd form module"
import { MatFormFieldModule } from '@angular/material';
endsnippet


# ---------------------- angular2 material design -------------------------
snippet ng2-router-import
import { Router } from '@angular/router';
endsnippet

snippet ng2-router-navigate
this.router.navigate(['${1}']);
endsnippet

snippet ng2-two-way-binding
private _${1:value};
@Output()
$1Change: EventEmitter<any> = new EventEmitter<any>();
@Input()
get $1() {
	return this._$1;
}
set $1(_$1) {
	if (_$1 !== this._$1) {
		this._$1 = _$1;
		this.$1Change.emit(_$1);
	}
}
endsnippet


snippet ng2-comp-table
import {
	Component,
	OnInit,
	OnDestroy,
	ViewEncapsulation
} from '@angular/core';
import {
	ActivatedRoute,
	Router,
} from '@angular/router';
import {
	BehaviorSubject,
	Subscription,
	of,
} from 'rxjs';
import {
	AddonOption,
	AddonSearchOption,
	AddonDateOption,
	AddonFiltersOption,
	AddonExportOption,
	CompTableOption,
	CompTableState,
	ICompPagingState,
	ICompTableOption,
	ICompTableState,
	ICompTableStateChange,
	TableBtnOptColDefOption,
	TableBtnOptColMenuOption,
	TableColDefOption,
	TableEditColDefOption,
	TableOption,
	TableState,
	CompPagingState,
} from '@petkit/material';

// list
@Component({
	selector: 'common-foster-bonus-list',
	templateUrl: './list.component.html',
	styleUrls: [ './list.component.scss'],
})
export class ListComponent implements OnInit, OnDestroy {
	compTableOption: ICompTableOption;
	compPagingState: BehaviorSubject<ICompPagingState<any>> = new BehaviorSubject<ICompPagingState<any>>(new CompPagingState());

	private _subs: Subscription[] = [];

	constructor(
		public router: Router,
		public route: ActivatedRoute,
	) {
		this._initTable();
		this._initTableData();
	}

	ngOnInit() {
	}

	ngOnDestroy() {
		this._subs.map(obs => obs.unsubscribe());
	}

	private _initTable() {
		this.compTableOption = new CompTableOption({
				addon: new AddonOption({
					date: new AddonDateOption({
						hidden: false,
						value: [
							new Date(),
							new Date(),
						]
					}),
					title: '寄养提成',
					search: new AddonSearchOption({
						hidden: false,
						disabled: false,
						placeholder: '搜索...',
					}),
					filters: [new AddonFiltersOption({
						col: 'status',
						placeholder: '状态',
						multiple: true,
						data: of([{
							value: 1,
							text: '启用',
						}, {
							value: 0,
							text: '禁用',
						}]),
					})],
					buttons: [{
						color: 'primary',
						text: '添加',
						onClick: () => {
							console.log('添加');
						}
					}, {
						color: 'accent',
						text: '修改',
						onClick: () => {
							console.log('修改');
						}
					}],
					exports: new AddonExportOption({
						hidden: true,
					}),
				}),
			table: new TableOption({
				colDef: [
					new TableColDefOption({
						col: 'employeeNumber',
						header: '工号',
					}),
					new TableColDefOption({
						col: 'peopleName',
						header: '姓名',
					}),
					new TableColDefOption({
						col: 'dailyCheckNum',
						header: '时间段内总检查次数',
					}),
					new TableColDefOption({
						col: 'dailyCheckCommissionSum',
						header: '时间段内总提成金额',
					}),
					new TableEditColDefOption({
						col: 'status',
						header: '角色状态',
						editOption: {
							type: 'slide-toggle',
							editable: true,
							override: true,
							formOption: {
								text: of(['禁用', '启用']),
								color: 'primary',
							}
						},
						formValueChange: ({
							row,
						}) => {
							if (row.status !== row._statusFormValue) {
								console.log('status change: ', row);
							}
						},
					}),
					new TableBtnOptColDefOption({
						header: '操作',
						menus: [
							new TableBtnOptColMenuOption({
								color: 'primary',
								text: '查看详情',
								onClick: ({
									row,
								}) => {
									this.router.navigate(['update', row.id], {
										relativeTo: this.route.parent,
									});
								}
							}),
						]
					}),
				]
			})
		});
	}

	private _initTableData() {
		const value = this.compPagingState.value;
		value.data = [{
			'employeeNumber': '0010',
			'peopleName': 'sora',
			'systemUserId': 1175,
			'dailyCheckNum': 1,
			'dailyCheckCommissionSum': 17.5
		}];
		this.compPagingState.next(value);
	}
}
endsnippet
